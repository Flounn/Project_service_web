// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class BibliothequeImpl_Stub
    extends java.rmi.server.RemoteStub
    implements Bibliotheque, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_add_0;
    private static java.lang.reflect.Method $method_del_1;
    private static java.lang.reflect.Method $method_findByAuteur_2;
    private static java.lang.reflect.Method $method_findByTitre_3;
    
    static {
	try {
	    $method_add_0 = Bibliotheque.class.getMethod("add", new java.lang.Class[] {long.class, java.lang.String.class, java.lang.String.class});
	    $method_del_1 = Bibliotheque.class.getMethod("del", new java.lang.Class[] {long.class});
	    $method_findByAuteur_2 = Bibliotheque.class.getMethod("findByAuteur", new java.lang.Class[] {java.lang.String.class});
	    $method_findByTitre_3 = Bibliotheque.class.getMethod("findByTitre", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public BibliothequeImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of add(long, String, String)
    public boolean add(long $param_long_1, java.lang.String $param_String_2, java.lang.String $param_String_3)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_add_0, new java.lang.Object[] {new java.lang.Long($param_long_1), $param_String_2, $param_String_3}, 1677992251174953973L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of del(long)
    public boolean del(long $param_long_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_del_1, new java.lang.Object[] {new java.lang.Long($param_long_1)}, 8381138771734044034L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of findByAuteur(String)
    public java.util.ArrayList findByAuteur(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_findByAuteur_2, new java.lang.Object[] {$param_String_1}, 32785035555477049L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of findByTitre(String)
    public java.util.ArrayList findByTitre(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_findByTitre_3, new java.lang.Object[] {$param_String_1}, 7785200921699746196L);
	    return ((java.util.ArrayList) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
