// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

public final class LivreImpl_Stub
    extends java.rmi.server.RemoteStub
    implements Livre, java.rmi.Remote
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_addToAttente_0;
    private static java.lang.reflect.Method $method_enleveFromAttente_1;
    private static java.lang.reflect.Method $method_getAttente_2;
    private static java.lang.reflect.Method $method_getAuteur_3;
    private static java.lang.reflect.Method $method_getIsbn_4;
    private static java.lang.reflect.Method $method_getTitre_5;
    private static java.lang.reflect.Method $method_isDisponible_6;
    private static java.lang.reflect.Method $method_remoteEquals_7;
    private static java.lang.reflect.Method $method_remoteToString_8;
    private static java.lang.reflect.Method $method_setAttente_9;
    private static java.lang.reflect.Method $method_setAuteur_10;
    private static java.lang.reflect.Method $method_setIsbn_11;
    private static java.lang.reflect.Method $method_setTitre_12;
    
    static {
	try {
	    $method_addToAttente_0 = Livre.class.getMethod("addToAttente", new java.lang.Class[] {Personne.class});
	    $method_enleveFromAttente_1 = Livre.class.getMethod("enleveFromAttente", new java.lang.Class[] {Personne.class});
	    $method_getAttente_2 = Livre.class.getMethod("getAttente", new java.lang.Class[] {});
	    $method_getAuteur_3 = Livre.class.getMethod("getAuteur", new java.lang.Class[] {});
	    $method_getIsbn_4 = Livre.class.getMethod("getIsbn", new java.lang.Class[] {});
	    $method_getTitre_5 = Livre.class.getMethod("getTitre", new java.lang.Class[] {});
	    $method_isDisponible_6 = Livre.class.getMethod("isDisponible", new java.lang.Class[] {});
	    $method_remoteEquals_7 = Livre.class.getMethod("remoteEquals", new java.lang.Class[] {java.lang.Object.class});
	    $method_remoteToString_8 = Livre.class.getMethod("remoteToString", new java.lang.Class[] {});
	    $method_setAttente_9 = Livre.class.getMethod("setAttente", new java.lang.Class[] {java.util.List.class});
	    $method_setAuteur_10 = Livre.class.getMethod("setAuteur", new java.lang.Class[] {java.lang.String.class});
	    $method_setIsbn_11 = Livre.class.getMethod("setIsbn", new java.lang.Class[] {long.class});
	    $method_setTitre_12 = Livre.class.getMethod("setTitre", new java.lang.Class[] {java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    throw new java.lang.NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public LivreImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of addToAttente(Personne)
    public void addToAttente(Personne $param_Personne_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_addToAttente_0, new java.lang.Object[] {$param_Personne_1}, 9173187813155124126L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of enleveFromAttente(Personne)
    public void enleveFromAttente(Personne $param_Personne_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_enleveFromAttente_1, new java.lang.Object[] {$param_Personne_1}, 5788060752409734808L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAttente()
    public java.util.List getAttente()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAttente_2, null, 3053972952469114248L);
	    return ((java.util.List) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getAuteur()
    public java.lang.String getAuteur()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getAuteur_3, null, 4857775955428939662L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getIsbn()
    public long getIsbn()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getIsbn_4, null, -7991743328711550477L);
	    return ((java.lang.Long) $result).longValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of getTitre()
    public java.lang.String getTitre()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getTitre_5, null, -1134002295382143303L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of isDisponible()
    public boolean isDisponible()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_isDisponible_6, null, 4164771674017439645L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remoteEquals(Object)
    public boolean remoteEquals(java.lang.Object $param_Object_1)
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_remoteEquals_7, new java.lang.Object[] {$param_Object_1}, -2114789682684168415L);
	    return ((java.lang.Boolean) $result).booleanValue();
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of remoteToString()
    public java.lang.String remoteToString()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_remoteToString_8, null, 731194745452422197L);
	    return ((java.lang.String) $result);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setAttente(List)
    public void setAttente(java.util.List $param_List_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setAttente_9, new java.lang.Object[] {$param_List_1}, 2530686379567758161L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setAuteur(String)
    public void setAuteur(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setAuteur_10, new java.lang.Object[] {$param_String_1}, -1127196878228815979L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setIsbn(long)
    public void setIsbn(long $param_long_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setIsbn_11, new java.lang.Object[] {new java.lang.Long($param_long_1)}, 2447559355677579488L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of setTitre(String)
    public void setTitre(java.lang.String $param_String_1)
	throws java.rmi.RemoteException
    {
	try {
	    ref.invoke(this, $method_setTitre_12, new java.lang.Object[] {$param_String_1}, 775989794254802960L);
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
